---
apiVersion: batch/v1
kind: Job
metadata:
  name: workshop-guides-create
  namespace: openshift-gitops
  annotations:
    argocd.argoproj.io/sync-wave: "99"
spec:
  template:
    spec:
      serviceAccountName: openshift-gitops-argocd-application-controller
      containers:
      - name: shell
        image: quay.io/luisarizmendi/ocp-job:latest  
        command: ["/bin/sh", "-c"]
        args:
        - |
          export HOME=/tmp  # Fix permission issues

          # Loop through users user01 to user50 and user99
          for i in $(seq -w 1 50) 99; do

            echo "Extracting variables"

            NAMESPACE="user${i}-workshop-guide"
            CLUSTER_DOMAIN=$(oc get ingresses.config.openshift.io cluster -o jsonpath='{.spec.domain}' | sed 's/^apps\.//')

            while ! oc get secret user${i}-ai-models -n user${i}-tools &>/dev/null; do
                echo "Waiting for secret user${i}-ai-models..."
                sleep 2
            done

            while ! oc get secret user${i}-ai-pipeline -n user${i}-tools &>/dev/null; do
                echo "Waiting for secret user${i}-ai-pipeline..."
                sleep 2
            done

            MODELS_ACCESS_KEY=$(oc get secret user${i}-ai-models -n user${i}-tools -o jsonpath='{.data.AWS_ACCESS_KEY_ID}' | base64 --decode && echo)
            MODELS_SECRET_KEY=$(oc get secret user${i}-ai-models -n user${i}-tools -o jsonpath='{.data.AWS_SECRET_ACCESS_KEY}' | base64 --decode && echo)
            PIPELINES_ACCESS_KEY=$(oc get secret user${i}-ai-pipeline -n user${i}-tools -o jsonpath='{.data.AWS_ACCESS_KEY_ID}' | base64 --decode && echo)
            PIPELINES_SECRET_KEY=$(oc get secret user${i}-ai-pipeline -n user${i}-tools -o jsonpath='{.data.AWS_SECRET_ACCESS_KEY}' | base64 --decode && echo)
            BOOTC_ACCESS_KEY=$(oc get secret user${i}-bootc-exports -n user${i}-tools -o jsonpath='{.data.AWS_ACCESS_KEY_ID}' | base64 --decode && echo)
            BOOTC_SECRET_KEY=$(oc get secret user${i}-bootc-exports -n user${i}-tools -o jsonpath='{.data.AWS_SECRET_ACCESS_KEY}' | base64 --decode && echo)

            CONTAINER_REGISTRY_DOCKERCONFIGJSON={\"auths\":{\"workshop-registry-quay-app.openshift-operators.svc.cluster.local\":{\"auth\":\"$(echo -n user${i}:redhat$i | base64)\"},\"workshop-registry-quay-openshift-operators.apps.${CLUSTER_DOMAIN}\":{\"auth\":\"$(echo -n user${i}:redhat$i | base64)\"}}}

          echo "Creating values.yaml for user user${i}..."
          
          cat <<EOF > /tmp/values-user${i}.yaml
          # Common
          id: $i
          user: user${i}
          password: redhat$i
          ocp_cluster_url: $CLUSTER_DOMAIN
          git-workshop-url: https://github.com/luisarizmendi/workshop-moving-ai-to-the-edge
          openshift-user: user${i}
          openshift-password: redhat$i
          # Platform
          # Local Edge Devices to be (hopefully) assigned with corresponding group ids
          device-ip: 192.168.2.0
          device-username: redhat
          device-password: R3dh4t1!
          # Shared Nvidia Device 
          shared-nvidia-ip: 192.168.2.128
          shared-nvidia-user: admin
          shared-nvidia-pass: R3dh4t1!
          # Router / dns / dhcp
          gateway-dns-dhcp-openwrt: http://192.168.2.1
          wifi_ssid: FriendlyWrt
          wifi_password: password
          # Edge Container Registry
          container-registry-gitea: 192.168.2.200:5000
          container-registry-gitea-user: gitea
          container-registry-gitea-pass: gitea
          container-registry-dockerconfigjson: '${CONTAINER_REGISTRY_DOCKERCONFIGJSON}'

          # AI
          gitea-user: user${i}
          gitea-password: redhat$i
          object_storage_models_access_key: $MODELS_ACCESS_KEY
          object_storage_models_secret_key: $MODELS_SECRET_KEY
          object_storage_pipeline_access_key: $PIPELINES_ACCESS_KEY
          object_storage_pipeline_secret_key: $PIPELINES_SECRET_KEY
          object_storage_bootc_access_key: $BOOTC_ACCESS_KEY
          object_storage_bootc_secret_key: $BOOTC_SECRET_KEY
          registry-url: https://quay.io/user/luisarizmendi/
          EOF
          
          echo "Values configured:"
          cat  /tmp/values-user${i}.yaml
          echo ""

          echo "Ensuring the project exists..."
          if ! /usr/bin/oc get project $NAMESPACE >/dev/null 2>&1; then
            /usr/bin/oc new-project $NAMESPACE
          fi

          echo "Running Helm template..."
          helm repo add larizmen-charts https://raw.githubusercontent.com/luisarizmendi/helm-chart-repo/main/packages
          helm repo update

          helm template showroom larizmen-charts/showroom-single-pod --namespace=${NAMESPACE}  \
          --set deployer.domain=apps.${CLUSTER_DOMAIN} \
          --set-file content.user_data=/tmp/values-user${i}.yaml \
          --set proxy.resources.requests.memory=30Mi \
          --set proxy.resources.requests.cpu=30m \
          --set content.resources.requests.memory=30Mi \
          --set content.resources.requests.cpu=30m \
          --set terminal.resources.requests.memory=30Mi \
          --set terminal.resources.requests.cpu=30m \
          --set ocpconsole.resources.requests.memory=30Mi \
          --set ocpconsole.resources.requests.cpu=30m \
          --set wetty.resources.requests.memory=30Mi \
          --set wetty.resources.requests.cpu=30m \
          --set novnc.resources.requests.memory=30Mi \
          --set novnc.resources.requests.cpu=30m \
          --set content.repoUrl=https://github.com/luisarizmendi/workshop-moving-ai-to-the-edge \
          --set general.guid=1 \
          --set-string content.contentOnly="true" \
          | /usr/bin/oc apply -f -

          done 


          oc apply -f - <<EOF
          apiVersion: v1
          kind: Namespace
          metadata:
            annotations:
              argocd.argoproj.io/sync-wave: "0"
            name: workshop-common
          ---
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: group-config
            namespace: workshop-common
          data:
            groups.json: |
              {
                "Group 01": { "url": "https://showroom-user01-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 02": { "url": "https://showroom-user02-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 03": { "url": "https://showroom-user03-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 04": { "url": "https://showroom-user04-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 05": { "url": "https://showroom-user05-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 06": { "url": "https://showroom-user06-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 07": { "url": "https://showroom-user07-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 08": { "url": "https://showroom-user08-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 09": { "url": "https://showroom-user09-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 10": { "url": "https://showroom-user10-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 11": { "url": "https://showroom-user11-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 12": { "url": "https://showroom-user12-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 13": { "url": "https://showroom-user13-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 14": { "url": "https://showroom-user14-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 15": { "url": "https://showroom-user15-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 16": { "url": "https://showroom-user16-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 17": { "url": "https://showroom-user17-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 18": { "url": "https://showroom-user18-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 19": { "url": "https://showroom-user19-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 20": { "url": "https://showroom-user20-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 21": { "url": "https://showroom-user21-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 22": { "url": "https://showroom-user22-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 23": { "url": "https://showroom-user23-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 24": { "url": "https://showroom-user24-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 25": { "url": "https://showroom-user25-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 26": { "url": "https://showroom-user26-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 27": { "url": "https://showroom-user27-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 28": { "url": "https://showroom-user28-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 29": { "url": "https://showroom-user29-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 30": { "url": "https://showroom-user30-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 31": { "url": "https://showroom-user31-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 32": { "url": "https://showroom-user32-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 33": { "url": "https://showroom-user33-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 34": { "url": "https://showroom-user34-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 35": { "url": "https://showroom-user35-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 36": { "url": "https://showroom-user36-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 37": { "url": "https://showroom-user37-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 38": { "url": "https://showroom-user38-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 39": { "url": "https://showroom-user39-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 40": { "url": "https://showroom-user40-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 41": { "url": "https://showroom-user41-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 42": { "url": "https://showroom-user42-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 43": { "url": "https://showroom-user43-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 44": { "url": "https://showroom-user44-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 45": { "url": "https://showroom-user45-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 46": { "url": "https://showroom-user46-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 47": { "url": "https://showroom-user47-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 48": { "url": "https://showroom-user48-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 49": { "url": "https://showroom-user49-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" },
                "Group 50": { "url": "https://showroom-user50-workshop-guide.apps.$CLUSTER_DOMAIN/", "info": "" }
              }

          ---
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: workshop-group-selector
            namespace: workshop-common
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: workshop-group-selector
            template:
              metadata:
                labels:
                  app: workshop-group-selector
              spec:
                containers:
                - name: workshop-group-selector
                  image: quay.io/luisarizmendi/workshop-group-selector:latest
                  ports:
                  - containerPort: 8080
                  volumeMounts:
                  - name: config-volume
                    mountPath: /app/config
                volumes:
                - name: config-volume
                  configMap:
                    name: group-config
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: workshop-group-selector-service
            namespace: workshop-common
          spec:
            selector:
              app: workshop-group-selector
            ports:
              - protocol: TCP
                port: 80
                targetPort: 8080
          ---
          apiVersion: route.openshift.io/v1
          kind: Route
          metadata:
            name: workshop-group-selector
            namespace: workshop-common
          spec:
            path: /
            to:
              name: workshop-group-selector-service
              weight: 100
              kind: Service
            host: ''
            tls:
              insecureEdgeTerminationPolicy: Redirect
              termination: edge
            port:
              targetPort: 8080
            alternateBackends: []

          EOF



          echo "Guides ready!"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - "ALL"
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
      restartPolicy: OnFailure
  backoffLimit: 1






