apiVersion: v1
kind: Namespace
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  name: open-cluster-management-observability
---
apiVersion: batch/v1
kind: Job
metadata:
  name: acm-observability-bucket-create
  namespace: openshift-gitops
  annotations:
    argocd.argoproj.io/sync-wave: "5"
spec:
  template:
    spec:
      serviceAccountName: openshift-gitops-argocd-application-controller
      containers:
      - name: shell
        image: quay.io/luisarizmendi/ocp-job:latest  
        command: ["/bin/sh", "-c"]
        args:
        - |
              OBSERVABILITY_NAMESPACE="open-cluster-management-observability"
              BUCKET_NAME="acm-observability"

              apply_with_retries() {
                local attempt=0
                local max_attempts=5
                local delay=5

                while true; do
                  if "$@"; then
                    echo "Apply succeeded: $*"
                    return 0
                  fi

                  attempt=$(( attempt + 1 ))
                  if [ "$attempt" -ge "$max_attempts" ]; then
                    echo "Apply failed after $max_attempts attempts: $*"
                    return 1
                  fi

                  echo "Apply failed, retrying in $delay seconds... (attempt $attempt)"
                  sleep "$delay"
                done
              }
              set -e

              # https://github.com/noobaa/noobaa-core/tree/v5.18.1/src/api
              export NOOBAA_API_URL=https://$(oc get route noobaa-mgmt -n openshift-storage -o jsonpath='{.spec.host}')
              export NOOBAA_TOKEN=$(oc whoami -t)

              # Wait for openshift-storage.noobaa.io to exist
              while ! oc get storageclass openshift-storage.noobaa.io &>/dev/null; do
                echo "Waiting for openshift-storage.noobaa.io StorageClass..."
                sleep 10
              done
              
              echo "openshift-storage.noobaa.io found."

              echo "Creating bucket $BUCKET_NAME"
              apply_with_retries  oc apply -f - <<EOF
              apiVersion: objectbucket.io/v1alpha1
              kind: ObjectBucketClaim
              metadata:
                name: $BUCKET_NAME
                namespace: $OBSERVABILITY_NAMESPACE
              spec:
                bucketName: $BUCKET_NAME
                objectBucketName: $BUCKET_NAME
                storageClassName: openshift-storage.noobaa.io
              EOF


              # Wait until the secret exists
              echo "Waiting for secret $BUCKET_NAME in namespace $OBSERVABILITY_NAMESPACE..."
              until kubectl get secret "$BUCKET_NAME" -n "$OBSERVABILITY_NAMESPACE" &>/dev/null; do
                  sleep 2
              done

              echo "Secret created! Extracting credentials..."

              export ACCESS_KEY_ID=$(kubectl get secret "$BUCKET_NAME" -n "$OBSERVABILITY_NAMESPACE" -o jsonpath="{.data.AWS_ACCESS_KEY_ID}" | base64 -d)
              export SECRET_ACCESS_KEY=$(kubectl get secret "$BUCKET_NAME" -n "$OBSERVABILITY_NAMESPACE" -o jsonpath="{.data.AWS_SECRET_ACCESS_KEY}" | base64 -d)

                  echo "Creating Thanos secret"
              apply_with_retries  oc apply -f - <<EOF
              apiVersion: v1
              kind: Secret
              metadata:
                name: thanos-object-storage
                namespace: open-cluster-management-observability
                annotations:
                  argocd.argoproj.io/sync-wave: "6"
              type: Opaque
              stringData:
                thanos.yaml: |
                  type: s3
                  config:
                    bucket: $BUCKET_NAME
                    endpoint: s3.openshift-storage.svc.cluster.local
                    insecure: true
                    access_key: $ACCESS_KEY_ID
                    secret_key: $SECRET_ACCESS_KEY
              EOF

              echo "Environment ready!"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - "ALL"
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
      restartPolicy: OnFailure
  backoffLimit: 6

---
apiVersion: observability.open-cluster-management.io/v1beta2
kind: MultiClusterObservability
metadata:
  name: observability
  namespace: open-cluster-management-observability
  annotations:
    argocd.argoproj.io/sync-wave: "7"
spec:
  observabilityAddonSpec: {}
  storageConfig:
    metricObjectStorage:
      name: thanos-object-storage
      key: thanos.yaml