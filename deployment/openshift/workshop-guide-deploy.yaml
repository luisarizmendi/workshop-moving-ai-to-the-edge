apiVersion: batch/v1
kind: Job
metadata:
  name: bootstrap-showroom
  namespace: openshift-gitops
spec:
  template:
    spec:
      serviceAccountName: openshift-gitops-argocd-application-controller
      containers:
      - name: bootstrap-showroom
        image: quay.io/luisarizmendi/helm-cli:latest  
        command: ["/bin/sh", "-c"]
        args:
        - |
          export HOME=/tmp  # Fix permission issues

          NAMESPACE="showroom"

          echo "Creating values.yaml..."
          cat <<EOF > /tmp/values.yaml
          # Common
          ocp_cluster_url: xxxxxxxxxxxxxxxxxxxxxxxxxx
          git-workshop-url: https://github.com/luisarizmendi/workshop-moving-ai-to-the-edge
          openshift-user-base: user
          openshift-password-base: redhat
          # Platform
          # Local Edge Devices to be (hopefully) assigned with corresponding group ids
          device-ip-base: 192.168.2.0
          device-username: redhat
          device-password: R3dh4t1!
          # Shared Nvidia Device 
          shared-nvidia-ip: 192.168.2.128
          shared-nvidia-user: admin
          shared-nvidia-pass: R3dh4t1!
          # Router / dns / dhcp
          gateway-dns-dhcp-openwrt: http://192.168.2.1
          wifi_ssid: FriendlyWrt
          wifi_password: password
          # Edge Container Registry
          container-registry-gitea: 192.168.2.200:5000
          container-registry-gitea-user: gitea
          container-registry-gitea-pass: gitea
          # AI
          minio-user-base: user
          minio-password-base: redhat
          gitea-user-base: user
          gitea-password-base: redhat
          registry-url: https://quay.io/user/luisarizmendi/
          EOF

          echo "Ensuring the project exists..."
          if ! /usr/bin/oc get project $NAMESPACE >/dev/null 2>&1; then
            /usr/bin/oc new-project $NAMESPACE
          fi

          echo "Fetching cluster domain..."
          clusterdomain_apps=$(/usr/bin/oc get ingresses.config.openshift.io cluster -o jsonpath='{.spec.domain}')

          echo "Running Helm template..."
          helm repo add larizmen-charts https://raw.githubusercontent.com/luisarizmendi/helm-chart-repo/main/packages
          helm repo update

          helm template showroom larizmen-charts/showroom-single-pod --namespace=${NAMESPACE}  \
          --set deployer.domain=${clusterdomain_apps} \
          --set-file content.user_data=/tmp/values.yaml \
          --set content.repoUrl=https://github.com/luisarizmendi/workshop-moving-ai-to-the-edge \
          --set general.guid=1 \
          --set-string content.contentOnly="true" \
          | /usr/bin/oc apply -f -

          echo "Environment ready!"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - "ALL"
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
      restartPolicy: Never
  backoffLimit: 1