# Stage 1: Build and fetch required binaries
FROM registry.fedoraproject.org/fedora:latest AS builder

ENV HELM_VERSION="v3.13.2"
ENV ARCH="amd64"

RUN dnf install -y git make golang jq tar gzip curl && \
    git clone https://github.com/red-hat-storage/odf-cli.git /src/odf-cli

WORKDIR /src/odf-cli
RUN make build

RUN curl -fsSL -o /tmp/helm.tar.gz "https://get.helm.sh/helm-${HELM_VERSION}-linux-${ARCH}.tar.gz" && \
    tar -zxvf /tmp/helm.tar.gz -C /tmp && \
    mv /tmp/linux-${ARCH}/helm /usr/local/bin/helm && \
    chmod +x /usr/local/bin/helm

RUN VERSION=$(curl -s https://api.github.com/repos/noobaa/noobaa-operator/releases/latest | jq -r '.name') && \
    curl -LO https://github.com/noobaa/noobaa-operator/releases/download/$VERSION/noobaa-operator-$VERSION-linux-amd64.tar.gz && \
    tar -xvzf noobaa-operator-$VERSION-linux-amd64.tar.gz && \
    chmod +x noobaa-operator

# Stage 2: Final image
FROM quay.io/openshift/origin-cli:latest

USER root

RUN dnf install -y ansible-core jq tar gzip && dnf clean all

COPY --from=builder /usr/local/bin/helm /usr/local/bin/helm
COPY --from=builder /src/odf-cli/bin/odf /usr/local/bin/odf
COPY --from=builder /src/odf-cli/noobaa-operator /usr/local/bin/noobaa

RUN chmod +x /usr/local/bin/{odf,noobaa,helm}

USER 1001
