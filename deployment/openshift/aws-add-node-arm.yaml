###############
## https://docs.redhat.com/en/documentation/openshift_container_platform/4.18/html/postinstallation_configuration/configuring-multi-architecture-compute-machines-on-an-openshift-cluster#creating-multi-arch-compute-nodes-aws

# Put the right AMI in "<REPLACE_WITH_ARM64_AMI_ID>". You can get the list with oc:
#
# oc get configmap/coreos-bootimages \
#	  -n openshift-machine-config-operator \
#	  -o jsonpath='{.data.stream}' | jq \
#	  -r '.architectures.<arch>.images.aws.regions."<region>".image'
#
# For example: oc get configmap/coreos-bootimages -n openshift-machine-config-operator -o jsonpath='{.data.stream}' | jq -r '.architectures.aarch64.images.aws.regions."us-east-2".image'
#  ->  it will get output: ami-0b04071739ccf4af2
# 
################



apiVersion: batch/v1
kind: Job
metadata:
  name: create-arm-machineset
  namespace: openshift-gitops
spec:
  template:
    spec:
      serviceAccountName: openshift-gitops-argocd-application-controller
      restartPolicy: Never
      containers:
      - name: bootstrap-arm
        image: quay.io/luisarizmendi/ocp-job:latest
        command: ["/bin/sh", "-c"]
        args:
        - |
          set -e

          ##########################################
          #             REPLACE THIS !
          ##########################################
          
          export AMI_ID="<REPLACE_WITH_ARM64_AMI_ID>"
          
          ##########################################
          ##########################################
          echo "Finding a base MachineSet..."
          BASE_MS=$(oc get machineset -n openshift-machine-api -o name | head -n 1)
          echo "Using base MachineSet: $BASE_MS"

          echo "Exporting and modifying MachineSet..."
          oc get $BASE_MS -n openshift-machine-api -o yaml > /tmp/base-machineset.yaml

          NAME_SUFFIX="arm64"
          REGION=$(oc get infrastructure cluster -o jsonpath='{.status.platformStatus.aws.region}')

          BASE_NAME=$(basename $BASE_MS)
          NEW_NAME="${BASE_NAME%-*}-$NAME_SUFFIX"

          cp /tmp/base-machineset.yaml /tmp/new-machineset.yaml

          sed -i "s/^  name: $BASE_NAME/  name: $NEW_NAME/" /tmp/new-machineset.yaml
          sed -i "s/machine.openshift.io\/cluster-api-machineset: $BASE_NAME/machine.openshift.io\/cluster-api-machineset: $NEW_NAME/g" /tmp/new-machineset.yaml
          sed -i "s/^\([[:space:]]*id:[[:space:]]*\)ami-.*/\1$AMI_ID/" /tmp/new-machineset.yaml
          sed -i 's/amd64/arm64/g' /tmp/new-machineset.yaml
          sed -i "s/instanceType: .*/instanceType: m6g.large/" /tmp/new-machineset.yaml
          sed -i 's/^\([[:space:]]*replicas:[[:space:]]*\)[0-9]\+/\11/' /tmp/new-machineset.yaml

          echo "Creating this object:"
          cat /tmp/new-machineset.yaml

          echo "Creating new MachineSet: $NEW_NAME"
          oc apply -f /tmp/new-machineset.yaml
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - "ALL"
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
  backoffLimit: 1