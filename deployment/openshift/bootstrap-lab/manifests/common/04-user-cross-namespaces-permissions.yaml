---
apiVersion: batch/v1
kind: Job
metadata:
  name: user-namespace-permissions-create
  namespace: openshift-gitops
  annotations:
    argocd.argoproj.io/sync-wave: "4"
spec:
  template:
    spec:
      serviceAccountName: openshift-gitops-argocd-application-controller
      containers:
      - name: shell
        image: quay.io/luisarizmendi/ocp-job:latest  
        command: ["/bin/sh", "-c"]
        args:
        - |

          # Loop through users user01 to user50 and user99
          for i in $(seq -w 1 50) 99; do
            namespace_source="user${i}-ai"
            for n in tools; do
              namespace_dest=user${i}-${n}

              while true; do
                  if oc get namespace "$namespace_source" &> /dev/null; then
                      echo "Namespace '$namespace_source' has been created successfully!"
                      break
                  fi
                  sleep 10
              done
              while true; do
                  if oc get namespace "$namespace_dest" &> /dev/null; then
                      echo "Namespace '$namespace_dest' has been created successfully!"
                      break
                  fi
                  sleep 10
              done

              echo "Enabling access to $namespace_source from namespace $namespace_dest"
          oc apply -f - <<EOF
          apiVersion: rbac.authorization.k8s.io/v1
          kind: Role
          metadata:
            name: pipeline-executor
            namespace: $namespace_dest
          rules:
            - apiGroups: ["tekton.dev"]
              resources: ["pipelineruns"]
              verbs: ["create", "get", "list", "watch"]
          ---
          apiVersion: rbac.authorization.k8s.io/v1
          kind: RoleBinding
          metadata:
            name: pipeline-runner-access
            namespace: $namespace_dest
          subjects:
            - kind: ServiceAccount
              name: pipeline-runner-dspa
              namespace: $namespace_source
          roleRef:
            kind: Role
            name: pipeline-executor
            apiGroup: rbac.authorization.k8s.io
          EOF
            done
          done 
          echo "Environment ready!"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - "ALL"
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
      restartPolicy: OnFailure
  backoffLimit: 1
