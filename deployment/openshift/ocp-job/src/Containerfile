# Stage 1: Build and fetch required binaries
FROM registry.fedoraproject.org/fedora:latest AS builder
ENV HELM_VERSION="v3.13.2"
ENV ARCH="amd64"
RUN dnf install -y git make unzip golang jq tar gzip curl python3-pip podman yq
#RUN git clone https://github.com/red-hat-storage/odf-cli.git /src/odf-cli
#WORKDIR /src/odf-cli
#RUN make
RUN curl -fsSL -o /tmp/helm.tar.gz "https://get.helm.sh/helm-${HELM_VERSION}-linux-${ARCH}.tar.gz" && \
    tar -zxvf /tmp/helm.tar.gz -C /tmp && \
    mv /tmp/linux-${ARCH}/helm /usr/local/bin/helm && \
    chmod +x /usr/local/bin/helm
RUN VERSION=$(curl -s https://api.github.com/repos/noobaa/noobaa-operator/releases/latest | jq -r '.name') && \
    curl -LO https://github.com/noobaa/noobaa-operator/releases/download/$VERSION/noobaa-operator-$VERSION-linux-amd64.tar.gz && \
    tar -xvzf noobaa-operator-$VERSION-linux-amd64.tar.gz && \
    chmod +x noobaa-operator
#RUN curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" && \
#    unzip -q awscliv2.zip && \
#    ./aws/install && \
#    rm -rf awscliv2.zip aws
RUN curl -O https://dl.min.io/client/mc/release/linux-amd64/mc && \
    chmod +x mc && \
    mv mc /usr/local/bin/

# Stage 2: Final image
FROM quay.io/openshift/origin-cli:latest
USER root
RUN dnf install -y ansible-core jq tar gzip skopeo && dnf clean all

# Create a writable directory for mc config that user 1000 can access
RUN mkdir -p /tmp/mc-config && \
    chmod 777 /tmp/mc-config && \
    chown 1000:1000 /tmp/mc-config

# Set environment variable for mc config directory
ENV MC_CONFIG_DIR=/tmp/mc-config

COPY --from=builder /usr/local/bin/helm /usr/local/bin/helm
#COPY --from=builder /src/odf-cli/bin/odf /usr/local/bin/odf
#COPY --from=builder /src/odf-cli/noobaa-operator /usr/local/bin/noobaa
COPY --from=builder /usr/local/bin/mc /usr/local/bin/mc
RUN chmod +x /usr/local/bin/*

USER 1000